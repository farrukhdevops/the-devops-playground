
services:
  pg:
    image: postgres:16
    container_name: pg
    environment:
      POSTGRES_USER: catalog_user
      POSTGRES_DB: catalog
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 10

  loki:
    image: grafana/loki:2.9.8
    container_name: loki
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ../observability/loki/config.yml:/etc/loki/config.yml:ro
      - lokidata:/loki

  promtail:
    image: grafana/promtail:2.9.8
    container_name: promtail
    command: ["-config.file=/etc/promtail.yml"]
    volumes:
      - ../observability/promtail-config.yml:/etc/promtail.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    volumes:
      - ../observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../observability/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - promdata:/prometheus

  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: devopsplayground
    volumes:
      - ../../observability/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ../../observability/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafanadata:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter:v1.8.1
    container_name: node-exporter

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor

  storefront:
    image: ghcr.io/farrukhdevops/tdp-storefront:latest
    container_name: tdp-storefront
    depends_on: [prometheus, loki, grafana]

  catalog-api:
    image: ghcr.io/farrukhdevops/catalog-api:latest
    container_name: catalog-api

  orders-api:
    image: ghcr.io/farrukhdevops/orders-api:latest
    container_name: orders-api

  payments-api:
    image: ghcr.io/farrukhdevops/payments-api:latest
    container_name: payments-api

  inventory-worker:
    image: ghcr.io/farrukhdevops/inventory-worker:latest
    container_name: inventory-worker

  portainer:
    image: portainer/portainer-ce:2.21.4
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  pgdata:
  promdata:
  lokidata:
  grafanadata:
  portainer_data:
